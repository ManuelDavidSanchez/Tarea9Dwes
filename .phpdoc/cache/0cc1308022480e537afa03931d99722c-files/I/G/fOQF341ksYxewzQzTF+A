1740688430
0cc1308022480e537afa03931d99722c-phpdoc%3A828e0013b8f3bc1bb22b4f57172b019d-d6e82c819edd89b834507f984b3fa932
s:29672:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:9:"index.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:3:{s:16:"\obtenerUrlApi()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"name";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:144;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:146;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\obtenerUrlApi()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"obtenerUrlApi";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:42:"Obtiene la URL de la API para un Pokémon.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:107:"Esta función recibe el nombre o ID de un Pokémon y construye la URL
para obtener los datos de la PokeAPI.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:25:"Nombre o ID del Pokémon.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"name";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:53:"La URL completa para hacer la solicitud a la PokeAPI.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:20:"\obtenerDatosDeApi()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"url";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:157;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:167;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\obtenerDatosDeApi()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"obtenerDatosDeApi";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:67:"Realiza la solicitud a la PokeAPI y obtiene los datos del Pokémon.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:126:"Esta función hace la solicitud a la PokeAPI utilizando file_get_contents()
y devuelve los datos en formato JSON decodificado.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:55:"La URL de la API para acceder a los datos del Pokémon.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:3:"url";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:62:"Los datos del Pokémon decodificados, o null en caso de error.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:17:"\mostrarPokemon()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"pokemonData";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:178;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:193;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\mostrarPokemon()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"mostrarPokemon";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:37:"Muestra la información del Pokémon.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:158:"Esta función toma los datos del Pokémon obtenidos de la PokeAPI y los muestra
en una estructura HTML, incluyendo la imagen, ID, nombre, tipo, altura y peso.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:43:"Los datos del Pokémon obtenidos de la API.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:11:"pokemonData";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:58:"Esta función no retorna nada, solo genera contenido HTML.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"d6e82c819edd89b834507f984b3fa932";s:39:" phpDocumentor\Reflection\Php\File path";s:9:"index.php";s:41:" phpDocumentor\Reflection\Php\File source";s:9454:"<!DOCTYPE html>
<html lang="es">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>TAREA 9 - DWES</title>
        <style>
            /* General Body Styles */
            body {
                font-family: 'Arial', sans-serif;
                background-color: #f3f4f6;
                margin: 0;
                padding: 0;
                color: blue;
                font-size: 20px;
            }

            /* Contenedor principal */
            .contenedor {
                width: 40%;
                margin-top:60px;
                margin-left: 30%;
                padding: 20px;
                background-color: #ffffff;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                border-radius: 10px;
                text-align: center;
            }

            /* Estilo para el encabezado */
            h1 {
                color: blue;
                font-size: 2rem;
                margin-bottom: 30px;
            }

            /* Estilo para el formulario */
            form {
                display: flex;
                justify-content: center;
                align-items: center;
                margin-bottom: 30px;
            }

            /* Campo de texto */
            input[type="text"] {
                padding: 10px;
                font-size: 1rem;
                border-radius: 5px;
                border: 1px solid #ddd;
                margin-right: 10px;
                width: 300px;
                transition: border-color 0.3s ease;
            }

            input[type="text"]:focus {
                border-color: #4CAF50;
                outline: none;
            }

            /* Botón de búsqueda */
            button {
                padding: 10px 20px;
                font-size: 1rem;
                background-color: blue;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            button:hover {
                background-color: #45a049;
            }

            /* Contenedor de resultados */
            .resultadoContenedor {
                display: flex;
                justify-content: center;
                align-items: flex-start;
                gap: 30px;
                margin-top: 30px;
            }

            /* Estilo para la imagen del Pokémon */
            .pokemon-imagen img {
                width: 150px;
                height: 150px;
                border-radius: 10px;
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            }

            /* Estilo para la información del Pokémon */
            .pokemon-info {
                max-width: 300px;
                text-align: left;
                padding: 15px;
                background-color: #f9f9f9;
                border-radius: 10px;
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
                
            }

            .pokemon-info p {
                font-size: 20px;
                color: #555;
                margin-bottom: 10px;
                
            }

            /* Estilo para los títulos dentro de la información */
            .pokemon-info strong {
                color: blue;
                font-weight: bold;
                font-size: 20px;
            }
        </style>
    </head>
    <body>      
        <div class="contenedor">
            <h1>Tarea 9 - Dwes</h1>
            
            <!-- Formulario para buscar Pokémon por nombre o ID -->
            <form method="GET" onsubmit="return validarFormulario()">
                <!-- Campo de entrada para el nombre o ID del Pokémon -->
                <input type="text" name="pokemon" id="pokemon" placeholder="Introduce el nombre o ID del Pokémon" required>
                <!-- Botón para enviar el formulario -->
                <button type="submit">Buscar</button>
            </form>
            
            <div class="resultadoContenedor">      
                <?php
                  /**
                    * Obtiene la URL de la API para un Pokémon.
                    *
                    * Esta función recibe el nombre o ID de un Pokémon y construye la URL 
                    * para obtener los datos de la PokeAPI.
                    *
                    * @param string $name Nombre o ID del Pokémon.
                    * @return string La URL completa para hacer la solicitud a la PokeAPI.
                    */
                   function obtenerUrlApi($name) {
                       return "https://pokeapi.co/api/v2/pokemon/" . strtolower($name) . "/";
                   }

                   /**
                    * Realiza la solicitud a la PokeAPI y obtiene los datos del Pokémon.
                    *
                    * Esta función hace la solicitud a la PokeAPI utilizando file_get_contents()
                    * y devuelve los datos en formato JSON decodificado.
                    *
                    * @param string $url La URL de la API para acceder a los datos del Pokémon.
                    * @return array|null Los datos del Pokémon decodificados, o null en caso de error.
                    */
                   function obtenerDatosDeApi($url) {
                       // Intentar obtener los datos de la API usando file_get_contents
                       $data = @file_get_contents($url);

                       if ($data === FALSE) {
                           return null; // Error al obtener los datos
                       }

                       // Decodificar el JSON y devolver el resultado
                       return json_decode($data, true);
                   }

                   /**
                    * Muestra la información del Pokémon.
                    *
                    * Esta función toma los datos del Pokémon obtenidos de la PokeAPI y los muestra
                    * en una estructura HTML, incluyendo la imagen, ID, nombre, tipo, altura y peso.
                    *
                    * @param array $pokemonData Los datos del Pokémon obtenidos de la API.
                    * @return void Esta función no retorna nada, solo genera contenido HTML.
                    */
                   function mostrarPokemon($pokemonData) {
                       echo "<div class='pokemon-imagen'>";
                       // Mostrar la imagen del Pokémon
                       $spriteUrl = $pokemonData['sprites']['front_default'];
                       echo "<p><strong>Pokemon encontrado:</strong><br><img src='$spriteUrl' alt='" . $pokemonData['name'] . "' class='pokemon-imagen'></p>";
                       echo "</div>";

                       echo "<div class='pokemon-info'>";
                       // Mostrar la información del Pokémon (ID, nombre, tipo, altura, peso)
                       echo "<p><strong>ID:</strong> " . $pokemonData['id'] . "</p>";  
                       echo "<p><strong>Nombre:</strong> " . $pokemonData['name'] . "</p>";
                       echo "<p><strong>Tipo:</strong> " . $pokemonData['types'][0]['type']['name'] . "</p>";
                       echo "<p><strong>Altura:</strong> " . $pokemonData['height'] . " dm</p>";
                       echo "<p><strong>Peso:</strong> " . $pokemonData['weight'] . " hm</p>";
                       echo "</div>";
                   }

                   // Aquí empieza el flujo principal
                   if (isset($_GET['pokemon'])) {
                       // Obtener el nombre o ID del Pokémon ingresado
                       $name = $_GET['pokemon'];

                       // Obtener la URL de la API
                       $url = obtenerUrlApi($name);

                       // Obtener los datos de la API
                       $pokemonData = obtenerDatosDeApi($url);

                       if ($pokemonData === null) {
                           echo "<p>Error: No se encontró información para el Pokémon <strong>$name</strong>.</p>";
                       } else {
                           // Mostrar los datos del Pokémon
                           mostrarPokemon($pokemonData);
                       }
                   }

                ?>
            </div>
        </div>
        <script>
            /**
            * Valida que el campo "pokemon" contenga solo letras y números antes de enviar el formulario.
            *
            * @returns {boolean} Devuelve `true` si la entrada es válida, `false` en caso contrario.
            */
            function validarFormulario() {         
                // Obtener el valor del campo de entrada del formulario
                var pokemonName = document.getElementById("pokemon").value;

                // Expresión regular para solo letras y números 
                var regex = /^[a-zA-Z0-9]+$/;

                // Si el valor del campo no cumple con la expresión regular, mostramos un alert
                if (!regex.test(pokemonName)) {
                    alert ( "Por favor, ingrese solo letras y numeros (sin caracteres especiales).");
                    return false;  // No enviar el formulario
                }

                return true;  // Permitir enviar el formulario
            }
        </script>
    </body>
</html>

";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";